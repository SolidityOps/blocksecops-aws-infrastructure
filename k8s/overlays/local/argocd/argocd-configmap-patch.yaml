apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmd-params-cm
  labels:
    app.kubernetes.io/name: argocd-cmd-params-cm
    app.kubernetes.io/part-of: argocd
data:
  server.insecure: "true"
  server.disable.auth: "false"
  server.enable.proxy.extension: "true"
  application.instanceLabelKey: argocd.argoproj.io/instance
  server.repo.server.timeout.seconds: "60"
  server.repo.server.plaintext: "true"
  controller.status.processors: "20"
  controller.operation.processors: "10"
  controller.self.heal.timeout.seconds: "5"
  controller.repo.server.timeout.seconds: "60"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  application.instanceLabelKey: argocd.argoproj.io/instance
  server.rbac.log.enforce.enable: "false"
  policy.default: role:readonly
  policy.csv: |
    p, role:admin, applications, *, */*, allow
    p, role:admin, clusters, *, *, allow
    p, role:admin, repositories, *, *, allow
    g, argocd-admins, role:admin
  url: http://localhost:8080
  repositories: |
    - type: git
      url: https://github.com/argoproj/argocd-example-apps.git
    - type: helm
      url: https://argoproj.github.io/argo-helm
      name: argo
  oidc.config: |
    name: OIDC
    issuer: https://argocd-local.example.com/auth/realms/master
    clientId: argocd
    clientSecret: $oidc.clientSecret
    requestedScopes: ["openid", "profile", "email", "groups"]
    requestedIDTokenClaims: {"groups": {"essential": true}}