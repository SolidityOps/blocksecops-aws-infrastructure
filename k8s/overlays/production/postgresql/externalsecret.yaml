apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgresql-external-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: postgresql-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        POSTGRES_DB: "{{ .POSTGRES_DB }}"
        POSTGRES_USER: "{{ .POSTGRES_USER }}"
        POSTGRES_PASSWORD: "{{ .POSTGRES_PASSWORD }}"
        POSTGRES_REPLICATION_USER: "{{ .POSTGRES_REPLICATION_USER }}"
        POSTGRES_REPLICATION_PASSWORD: "{{ .POSTGRES_REPLICATION_PASSWORD }}"
  data:
  - secretKey: POSTGRES_DB
    remoteRef:
      key: database/postgresql/production
      property: database
  - secretKey: POSTGRES_USER
    remoteRef:
      key: database/postgresql/production
      property: username
  - secretKey: POSTGRES_PASSWORD
    remoteRef:
      key: database/postgresql/production
      property: password
  - secretKey: POSTGRES_REPLICATION_USER
    remoteRef:
      key: database/postgresql/production
      property: replication_username
  - secretKey: POSTGRES_REPLICATION_PASSWORD
    remoteRef:
      key: database/postgresql/production
      property: replication_password

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-secret-store
spec:
  provider:
    vault:
      server: "http://vault.vault-production.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "postgresql-production"
          serviceAccountRef:
            name: postgresql