apiVersion: kiali.io/v1alpha1
kind: Kiali
metadata:
  name: kiali
  namespace: kiali-system
spec:
  installation_tag: default
  istio_namespace: istio-system
  api:
    namespaces:
      exclude:
      - kube-.*
      - openshift.*
      - ibm.*
      - kiali-operator
      - kiali-system
  auth:
    strategy: anonymous
  external_services:
    custom_dashboards:
      enabled: true
    istio:
      root_namespace: istio-system
      component_status:
        enabled: true
        components:
        - app_label: istiod
          is_core: true
          is_proxy: false
        - app_label: istio-ingressgateway
          is_core: true
          is_proxy: true
          namespace: istio-system
        - app_label: istio-egressgateway
          is_core: false
          is_proxy: true
          namespace: istio-system
    prometheus:
      url: http://prometheus-server.prometheus-local.svc.cluster.local:9090
    grafana:
      enabled: true
      in_cluster_url: http://grafana.grafana-local.svc.cluster.local:3000
      url: http://grafana.grafana-local.svc.cluster.local:3000
    tracing:
      enabled: true
      in_cluster_url: http://jaeger-query.jaeger-system.svc.cluster.local:16686
      url: http://jaeger-query.jaeger-system.svc.cluster.local:16686
      use_grpc: true
      whitelist_istio_system: ["jaeger-query", "istio-ingressgateway"]
  server:
    metrics_enabled: true
    metrics_port: 9090
    port: 20001
    web_root: /kiali