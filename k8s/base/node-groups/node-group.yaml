apiVersion: v1
kind: ConfigMap
metadata:
  name: node-group-config
  namespace: kube-system
data:
  node.group.name: "main"
  node.group.instance.types: "t3.medium"
  node.group.capacity.type: "ON_DEMAND"
  node.group.disk.size: "20"
  node.group.desired.size: "2"
  node.group.max.size: "4"
  node.group.min.size: "1"
  node.group.ami.type: "AL2_x86_64"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-autoscaler
  namespace: cluster-autoscaler
  labels:
    app.kubernetes.io/name: cluster-autoscaler
    app.kubernetes.io/component: autoscaling
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-autoscaler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cluster-autoscaler
        app.kubernetes.io/component: autoscaling
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8085'
    spec:
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: cluster-autoscaler
      containers:
        - image: registry.k8s.io/autoscaling/cluster-autoscaler:v1.28.2
          name: cluster-autoscaler
          resources:
            limits:
              cpu: 100m
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 600Mi
          command:
            - ./cluster-autoscaler
            - --v=4
            - --stderrthreshold=info
            - --cloud-provider=aws
            - --skip-nodes-with-local-storage=false
            - --expander=least-waste
            - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/solidity-security-eks
            - --balance-similar-node-groups
            - --scale-down-enabled=true
            - --scale-down-delay-after-add=10m
            - --scale-down-unneeded-time=10m
            - --scale-down-delay-after-delete=10s
            - --scale-down-delay-after-failure=3m
            - --scale-down-utilization-threshold=0.5
            - --skip-nodes-with-system-pods=false
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
          imagePullPolicy: "Always"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: ssl-certs
          hostPath:
            path: "/etc/ssl/certs/ca-bundle.crt"
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
---
apiVersion: v1
kind: Service
metadata:
  name: cluster-autoscaler
  namespace: cluster-autoscaler
  labels:
    app.kubernetes.io/name: cluster-autoscaler
    app.kubernetes.io/component: autoscaling
spec:
  selector:
    app.kubernetes.io/name: cluster-autoscaler
  ports:
    - name: http
      port: 8085
      targetPort: 8085
      protocol: TCP
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cluster-autoscaler
  namespace: cluster-autoscaler
  labels:
    app.kubernetes.io/name: cluster-autoscaler
    app.kubernetes.io/component: autoscaling
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-autoscaler