apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-secrets-manager
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/component: secret-store
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
            namespace: external-secrets-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: external-secrets-system
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/ExternalSecretsRole"
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/component: service-account
---
# Example ExternalSecret that demonstrates how to sync secrets from AWS Secrets Manager
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: example-secret
  namespace: default
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/component: external-secret
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: example-secret
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: solidity-security/database
      property: username
  - secretKey: password
    remoteRef:
      key: solidity-security/database
      property: password