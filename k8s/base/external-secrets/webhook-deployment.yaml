apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets-webhook
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/component: webhook
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-webhook
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-secrets-webhook
        app.kubernetes.io/component: webhook
    spec:
      serviceAccountName: external-secrets-webhook
      containers:
      - name: webhook
        image: ghcr.io/external-secrets/external-secrets:v0.20.2
        imagePullPolicy: IfNotPresent
        args:
        - webhook
        - --port=10250
        - --dns-name=external-secrets-webhook.$(POD_NAMESPACE).svc
        - --cert-dir=/tmp/certs
        - --check-interval=5m
        - --metrics-addr=:8080
        - --healthz-addr=:8081
        ports:
        - name: webhook
          containerPort: 10250
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: healthz
          containerPort: 8082
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
          successThreshold: 1
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: certs
          mountPath: /tmp/certs
          readOnly: false
      volumes:
      - name: certs
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault