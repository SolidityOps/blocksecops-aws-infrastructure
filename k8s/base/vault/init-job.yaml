# Vault initialization job - Community Edition
# This job helps with initial Vault setup and provides unseal instructions
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init-helper
  namespace: vault-PLACEHOLDER_OVERLAY
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/component: init-helper
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault
        app.kubernetes.io/component: init-helper
    spec:
      restartPolicy: OnFailure
      serviceAccountName: vault
      containers:
        - name: vault-init
          image: hashicorp/vault:1.15.2
          command:
            - "/bin/sh"
            - "-c"
          args:
            - |
              echo "=== Vault Community Edition Initialization Helper ==="
              echo ""
              echo "This job provides instructions for manual Vault operations."
              echo ""
              echo "1. VAULT INITIALIZATION:"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault operator init"
              echo ""
              echo "2. SAVE THE UNSEAL KEYS AND ROOT TOKEN SECURELY!"
              echo ""
              echo "3. UNSEAL VAULT (repeat for vault-1 and vault-2):"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault operator unseal <unseal-key-1>"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault operator unseal <unseal-key-2>"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault operator unseal <unseal-key-3>"
              echo ""
              echo "4. SET VAULT ADDRESS:"
              echo "   export VAULT_ADDR=http://vault.vault-PLACEHOLDER_OVERLAY.svc.cluster.local:8200"
              echo ""
              echo "5. LOGIN WITH ROOT TOKEN:"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault auth <root-token>"
              echo ""
              echo "6. ENABLE KUBERNETES AUTH:"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault auth enable kubernetes"
              echo ""
              echo "7. CONFIGURE KUBERNETES AUTH:"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault write auth/kubernetes/config \\"
              echo "     token_reviewer_jwt=\$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) \\"
              echo "     kubernetes_host=https://kubernetes.default.svc \\"
              echo "     kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
              echo ""
              echo "8. CREATE EXTERNAL-SECRETS POLICY:"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault policy write external-secrets - <<EOF"
              echo "   path \"secret/*\" {"
              echo "     capabilities = [\"read\", \"list\"]"
              echo "   }"
              echo "   EOF"
              echo ""
              echo "9. CREATE EXTERNAL-SECRETS ROLE:"
              echo "   kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault write auth/kubernetes/role/external-secrets \\"
              echo "     bound_service_account_names=external-secrets \\"
              echo "     bound_service_account_namespaces=external-secrets-PLACEHOLDER_OVERLAY \\"
              echo "     policies=external-secrets \\"
              echo "     ttl=24h"
              echo ""
              echo "10. ENABLE KV SECRETS ENGINE:"
              echo "    kubectl exec -it vault-0 -n vault-PLACEHOLDER_OVERLAY -- vault secrets enable -path=secret kv-v2"
              echo ""
              echo "=== END OF INITIALIZATION INSTRUCTIONS ==="

              # Keep the job pod running for debugging if needed
              sleep 300
          env:
            - name: VAULT_ADDR
              value: "http://vault.vault-PLACEHOLDER_OVERLAY.svc.cluster.local:8200"
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi