apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: vault-PLACEHOLDER_OVERLAY
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/component: server
spec:
  serviceName: vault-internal
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: vault
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault
        app.kubernetes.io/component: server
    spec:
      serviceAccountName: vault
      securityContext:
        runAsNonRoot: true
        runAsUser: 100
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: vault
          image: hashicorp/vault:1.15.2
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - |
              export POD_IP=$(hostname -i)
              export VAULT_K8S_NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
              export VAULT_K8S_POD_NAME=$(hostname)
              export VAULT_ADDR=http://127.0.0.1:8200
              export VAULT_API_ADDR=http://${POD_IP}:8200
              export VAULT_CLUSTER_ADDR=http://${POD_IP}:8201

              # Replace placeholders in config
              sed "s/POD_IP/${POD_IP}/g" /vault/config/vault.hcl > /tmp/vault.hcl

              exec vault server -config=/tmp/vault.hcl
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_ADDR
              value: "http://127.0.0.1:8200"
            - name: VAULT_API_ADDR
              value: "http://$(POD_IP):8200"
            - name: VAULT_CLUSTER_ADDR
              value: "http://$(POD_IP):8201"
            - name: VAULT_RAFT_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_LOCAL_CONFIG
              value: |
                ui = true
                disable_mlock = true
          ports:
            - name: http
              containerPort: 8200
              protocol: TCP
            - name: https-internal
              containerPort: 8201
              protocol: TCP
          readinessProbe:
            exec:
              command: ["/bin/sh", "-ec", "vault status -tls-skip-verify"]
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          livenessProbe:
            exec:
              command: ["/bin/sh", "-ec", "vault status -tls-skip-verify"]
            failureThreshold: 2
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: config
              mountPath: /vault/config
            - name: data
              mountPath: /vault/data
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: config
          configMap:
            name: vault-config
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: vault
          app.kubernetes.io/component: server
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        storageClassName: gp2