apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-load-balancer-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/component: controller
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-load-balancer-controller
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-load-balancer-controller
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: aws-load-balancer-controller
      securityContext:
        fsGroup: 65534
      containers:
        - name: controller
          image: public.ecr.aws/eks/aws-load-balancer-controller:v2.7.2
          args:
            - --cluster-name=CLUSTER_NAME
            - --ingress-class=alb
            - --aws-vpc-id=VPC_ID
            - --aws-region=us-east-1
            - --feature-gates=SubnetsClusterTagging=true
          ports:
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
            - name: metrics-server
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: cert
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-certs
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - aws-load-balancer-controller
                topologyKey: kubernetes.io/hostname
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: alb
  labels:
    app.kubernetes.io/name: aws-load-balancer-controller
spec:
  controller: ingress.k8s.aws/alb
---
apiVersion: v1
kind: Service
metadata:
  name: aws-load-balancer-webhook-service
  namespace: kube-system
  labels:
    app.kubernetes.io/name: aws-load-balancer-controller
spec:
  ports:
    - name: webhook-server
      port: 443
      protocol: TCP
      targetPort: webhook-server
  selector:
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/component: controller